//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KSUtil {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KSUtil.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close File.
        /// </summary>
        public static string CloseFile {
            get {
                return ResourceManager.GetString("CloseFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ADDRESS.
        /// </summary>
        public static string Command_Address {
            get {
                return ResourceManager.GetString("Command_Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COMPARE.
        /// </summary>
        public static string Command_Compare {
            get {
                return ResourceManager.GetString("Command_Compare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HELP.
        /// </summary>
        public static string Command_Help {
            get {
                return ResourceManager.GetString("Command_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LOG.
        /// </summary>
        public static string Command_Log {
            get {
                return ResourceManager.GetString("Command_Log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LOOP.
        /// </summary>
        public static string Command_Loop {
            get {
                return ResourceManager.GetString("Command_Loop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to METASPAN.
        /// </summary>
        public static string Command_MetaSpan {
            get {
                return ResourceManager.GetString("Command_MetaSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PII.
        /// </summary>
        public static string Command_PII {
            get {
                return ResourceManager.GetString("Command_PII", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PLAY.
        /// </summary>
        public static string Command_Play {
            get {
                return ResourceManager.GetString("Command_Play", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RECORD.
        /// </summary>
        public static string Command_Record {
            get {
                return ResourceManager.GetString("Command_Record", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to REMOVE.
        /// </summary>
        public static string Command_Remove {
            get {
                return ResourceManager.GetString("Command_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SPAN.
        /// </summary>
        public static string Command_Span {
            get {
                return ResourceManager.GetString("Command_Span", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to STREAM.
        /// </summary>
        public static string Command_Stream {
            get {
                return ResourceManager.GetString("Command_Stream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE.
        /// </summary>
        public static string Command_Update {
            get {
                return ResourceManager.GetString("Command_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VIEW.
        /// </summary>
        public static string Command_View {
            get {
                return ResourceManager.GetString("Command_View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following commands are supported by KSUtil:
        ///  -view &lt;filePath&gt;
        ///     Display the contents of an event file (.xef or .xrf).
        ///     Use with -log &lt;filePath&gt; to copy the view result to a log file.
        ///  -compare &lt;filePath1&gt; &lt;filePath2&gt;
        ///     Compare metadata and stream content across two event files.
        ///     Use with -log &lt;filePath&gt; to copy the comparison result to a log file.
        ///  -update &lt;filePath&gt; &lt;metadataKey&gt; &lt;metadataValue&gt;
        ///     Add/edit metadata in an event file.
        ///     Use with -pii to alter personal meta [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CommandLineHelp {
            get {
                return ResourceManager.GetString("CommandLineHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compare Files.
        /// </summary>
        public static string CompareFiles {
            get {
                return ResourceManager.GetString("CompareFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} vs {1}.
        /// </summary>
        public static string CompareFilesHeader {
            get {
                return ResourceManager.GetString("CompareFilesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparison Results.
        /// </summary>
        public static string ComparisonResultsHeader {
            get {
                return ResourceManager.GetString("ComparisonResultsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to xd:\clips.
        /// </summary>
        public static string ConsoleClipRepository {
            get {
                return ResourceManager.GetString("ConsoleClipRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data Type ID.
        /// </summary>
        public static string DataTypeIdHeader {
            get {
                return ResourceManager.GetString("DataTypeIdHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to different.
        /// </summary>
        public static string Different {
            get {
                return ResourceManager.GetString("Different", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Done!.
        /// </summary>
        public static string Done {
            get {
                return ResourceManager.GetString("Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot record/play Color without RawIR or IR..
        /// </summary>
        public static string ErrorColorWithoutIR {
            get {
                return ResourceManager.GetString("ErrorColorWithoutIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Failed to compare files, {0}.
        /// </summary>
        public static string ErrorCompareFilesFailed {
            get {
                return ResourceManager.GetString("ErrorCompareFilesFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot record/play Compressed and Uncompressed Color at the same time..
        /// </summary>
        public static string ErrorCompressedAndUncompressedColor {
            get {
                return ResourceManager.GetString("ErrorCompressedAndUncompressedColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot record/play Depth without IR..
        /// </summary>
        public static string ErrorDepthWithoutIR {
            get {
                return ResourceManager.GetString("ErrorDepthWithoutIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect to the service. Please verify that the Kinect sensor is plugged in and operational..
        /// </summary>
        public static string ErrorFailedToConnect {
            get {
                return ResourceManager.GetString("ErrorFailedToConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid arguments for {0}.
        /// </summary>
        public static string ErrorInvalidArgs {
            get {
                return ResourceManager.GetString("ErrorInvalidArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid use of converter..
        /// </summary>
        public static string ErrorInvalidConversion {
            get {
                return ResourceManager.GetString("ErrorInvalidConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory is invalid..
        /// </summary>
        public static string ErrorInvalidDirectory {
            get {
                return ResourceManager.GetString("ErrorInvalidDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find the specified file..
        /// </summary>
        public static string ErrorInvalidFile {
            get {
                return ResourceManager.GetString("ErrorInvalidFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid file type, only .xef and .xrf files are supported..
        /// </summary>
        public static string ErrorInvalidFileExtension {
            get {
                return ResourceManager.GetString("ErrorInvalidFileExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect to the service due to an invalid IP address..
        /// </summary>
        public static string ErrorInvalidIPAddress {
            get {
                return ResourceManager.GetString("ErrorInvalidIPAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to alter metadata. A valid key/value must be provided..
        /// </summary>
        public static string ErrorInvalidMetadataPair {
            get {
                return ResourceManager.GetString("ErrorInvalidMetadataPair", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File path cannot be empty or null..
        /// </summary>
        public static string ErrorInvalidPath {
            get {
                return ResourceManager.GetString("ErrorInvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid stream specified: {0}.
        /// </summary>
        public static string ErrorInvalidStream {
            get {
                return ResourceManager.GetString("ErrorInvalidStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot record/play IR without Depth..
        /// </summary>
        public static string ErrorIRWithoutDepth {
            get {
                return ResourceManager.GetString("ErrorIRWithoutDepth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Failed to load file, {0}.
        /// </summary>
        public static string ErrorLoadFileFailed {
            get {
                return ResourceManager.GetString("ErrorLoadFileFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No streams available..
        /// </summary>
        public static string ErrorNoStreams {
            get {
                return ResourceManager.GetString("ErrorNoStreams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The KStudio client is not connected..
        /// </summary>
        public static string ErrorNotConnected {
            get {
                return ResourceManager.GetString("ErrorNotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The metadata key cannot be null..
        /// </summary>
        public static string ErrorNullMetadataKey {
            get {
                return ResourceManager.GetString("ErrorNullMetadataKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A stream with a null DataTypeId is not supported..
        /// </summary>
        public static string ErrorNullStream {
            get {
                return ResourceManager.GetString("ErrorNullStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred during playback: {0}.
        /// </summary>
        public static string ErrorPlaybackFailed {
            get {
                return ResourceManager.GetString("ErrorPlaybackFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} stream cannot be played because it does not exist in the file..
        /// </summary>
        public static string ErrorPlaybackStreamNotInFile {
            get {
                return ResourceManager.GetString("ErrorPlaybackStreamNotInFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} stream is not supported for playback by the Kinect sensor..
        /// </summary>
        public static string ErrorPlaybackStreamNotSupported {
            get {
                return ResourceManager.GetString("ErrorPlaybackStreamNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: {0}.
        /// </summary>
        public static string ErrorPrepend {
            get {
                return ResourceManager.GetString("ErrorPrepend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot record/play RawIR and IR at the same time..
        /// </summary>
        public static string ErrorRawIrWithIR {
            get {
                return ResourceManager.GetString("ErrorRawIrWithIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred during recording: {0}.
        /// </summary>
        public static string ErrorRecordingFailed {
            get {
                return ResourceManager.GetString("ErrorRecordingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} stream is not recordable by the Kinect sensor..
        /// </summary>
        public static string ErrorRecordingStreamNotSupported {
            get {
                return ResourceManager.GetString("ErrorRecordingStreamNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event Count.
        /// </summary>
        public static string EventCountHeader {
            get {
                return ResourceManager.GetString("EventCountHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data Size.
        /// </summary>
        public static string EventDataSizeHeader {
            get {
                return ResourceManager.GetString("EventDataSizeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KStudio Event File.
        /// </summary>
        public static string EventFileDescription {
            get {
                return ResourceManager.GetString("EventFileDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (*.xef, *.xrf)|*.xef;*.xrf.
        /// </summary>
        public static string EventFileFilter {
            get {
                return ResourceManager.GetString("EventFileFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index.
        /// </summary>
        public static string EventIndexHeader {
            get {
                return ResourceManager.GetString("EventIndexHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time.
        /// </summary>
        public static string EventRelativeTimeHeader {
            get {
                return ResourceManager.GetString("EventRelativeTimeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Events ({0}).
        /// </summary>
        public static string EventsHeader {
            get {
                return ResourceManager.GetString("EventsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag Size.
        /// </summary>
        public static string EventTagSizeHeader {
            get {
                return ResourceManager.GetString("EventTagSizeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit.
        /// </summary>
        public static string Exit {
            get {
                return ResourceManager.GetString("Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        public static string File {
            get {
                return ResourceManager.GetString("File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File: {0}.
        /// </summary>
        public static string FileHeader {
            get {
                return ResourceManager.GetString("FileHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Metadata.
        /// </summary>
        public static string FileMetadataHeader {
            get {
                return ResourceManager.GetString("FileMetadataHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        public static string KeyHeader {
            get {
                return ResourceManager.GetString("KeyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File 1.
        /// </summary>
        public static string LeftValueHeader {
            get {
                return ResourceManager.GetString("LeftValueHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Byte Array}.
        /// </summary>
        public static string MetadataValueBufferFriendlyName {
            get {
                return ResourceManager.GetString("MetadataValueBufferFriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to none.
        /// </summary>
        public static string None {
            get {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Personal Metadata ({0},{1}).
        /// </summary>
        public static string PersonalMetadataCompareCountHeader {
            get {
                return ResourceManager.GetString("PersonalMetadataCompareCountHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files differ in personal metadata content..
        /// </summary>
        public static string PersonalMetadataDifferentResult {
            get {
                return ResourceManager.GetString("PersonalMetadataDifferentResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Personal Metadata ({0}).
        /// </summary>
        public static string PersonalMetadataHeader {
            get {
                return ResourceManager.GetString("PersonalMetadataHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files have the same personal metadata content..
        /// </summary>
        public static string PersonalMetadataSameResult {
            get {
                return ResourceManager.GetString("PersonalMetadataSameResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public Metadata ({0},{1}).
        /// </summary>
        public static string PublicMetadataCompareCountHeader {
            get {
                return ResourceManager.GetString("PublicMetadataCompareCountHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files differ in public metadata content..
        /// </summary>
        public static string PublicMetadataDifferentResult {
            get {
                return ResourceManager.GetString("PublicMetadataDifferentResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public Metadata ({0}).
        /// </summary>
        public static string PublicMetadataHeader {
            get {
                return ResourceManager.GetString("PublicMetadataHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files have the same public metadata content..
        /// </summary>
        public static string PublicMetadataSameResult {
            get {
                return ResourceManager.GetString("PublicMetadataSameResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File 2.
        /// </summary>
        public static string RightValueHeader {
            get {
                return ResourceManager.GetString("RightValueHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to same.
        /// </summary>
        public static string Same {
            get {
                return ResourceManager.GetString("Same", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semantic ID.
        /// </summary>
        public static string SemanticIdHeader {
            get {
                return ResourceManager.GetString("SemanticIdHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playback in progress. Please monitor NuiView for visual feedback..
        /// </summary>
        public static string StartPlayback {
            get {
                return ResourceManager.GetString("StartPlayback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recording in progress....
        /// </summary>
        public static string StartRecording {
            get {
                return ResourceManager.GetString("StartRecording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playback has stopped..
        /// </summary>
        public static string StopPlayback {
            get {
                return ResourceManager.GetString("StopPlayback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recording has stopped..
        /// </summary>
        public static string StopRecording {
            get {
                return ResourceManager.GetString("StopRecording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to body.
        /// </summary>
        public static string Stream_Body {
            get {
                return ResourceManager.GetString("Stream_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to bodyIndex.
        /// </summary>
        public static string Stream_BodyIndex {
            get {
                return ResourceManager.GetString("Stream_BodyIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to color.
        /// </summary>
        public static string Stream_Color {
            get {
                return ResourceManager.GetString("Stream_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to depth.
        /// </summary>
        public static string Stream_Depth {
            get {
                return ResourceManager.GetString("Stream_Depth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ir.
        /// </summary>
        public static string Stream_IR {
            get {
                return ResourceManager.GetString("Stream_IR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to longExposureIr.
        /// </summary>
        public static string Stream_LongExpIR {
            get {
                return ResourceManager.GetString("Stream_LongExpIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to rawIr.
        /// </summary>
        public static string Stream_RawIR {
            get {
                return ResourceManager.GetString("Stream_RawIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream Details ({0}).
        /// </summary>
        public static string StreamDetailsHeader {
            get {
                return ResourceManager.GetString("StreamDetailsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End Time.
        /// </summary>
        public static string StreamEndTimeHeader {
            get {
                return ResourceManager.GetString("StreamEndTimeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream Name.
        /// </summary>
        public static string StreamNameHeader {
            get {
                return ResourceManager.GetString("StreamNameHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Streams ({0},{1}).
        /// </summary>
        public static string StreamsCompareCountHeader {
            get {
                return ResourceManager.GetString("StreamsCompareCountHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files differ in stream content..
        /// </summary>
        public static string StreamsDifferentResult {
            get {
                return ResourceManager.GetString("StreamsDifferentResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Streams ({0}).
        /// </summary>
        public static string StreamsHeader {
            get {
                return ResourceManager.GetString("StreamsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files have the same stream content..
        /// </summary>
        public static string StreamsSameResult {
            get {
                return ResourceManager.GetString("StreamsSameResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Time.
        /// </summary>
        public static string StreamStartTimeHeader {
            get {
                return ResourceManager.GetString("StreamStartTimeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear content.
        /// </summary>
        public static string ToolTip_CloseFile {
            get {
                return ResourceManager.GetString("ToolTip_CloseFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compare two event files.
        /// </summary>
        public static string ToolTip_CompareFiles {
            get {
                return ResourceManager.GetString("ToolTip_CompareFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit KSUtil.
        /// </summary>
        public static string ToolTip_Exit {
            get {
                return ResourceManager.GetString("ToolTip_Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View event file content.
        /// </summary>
        public static string ToolTip_ViewFile {
            get {
                return ResourceManager.GetString("ToolTip_ViewFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        public static string Unknown {
            get {
                return ResourceManager.GetString("Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating file metadata....
        /// </summary>
        public static string UpdatingFileMetadata {
            get {
                return ResourceManager.GetString("UpdatingFileMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating {0} metadata....
        /// </summary>
        public static string UpdatingStreamMetadata {
            get {
                return ResourceManager.GetString("UpdatingStreamMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string ValueHeader {
            get {
                return ResourceManager.GetString("ValueHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View File.
        /// </summary>
        public static string ViewFile {
            get {
                return ResourceManager.GetString("ViewFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparing files, please wait....
        /// </summary>
        public static string WaitForCompareFiles {
            get {
                return ResourceManager.GetString("WaitForCompareFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading file, please wait....
        /// </summary>
        public static string WaitForViewFile {
            get {
                return ResourceManager.GetString("WaitForViewFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to the Kinect service, please wait....
        /// </summary>
        public static string WaitToConnect {
            get {
                return ResourceManager.GetString("WaitToConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring Body stream, it will be regenerated during playback..
        /// </summary>
        public static string WarningIgnoreBodyDuringPlayback {
            get {
                return ResourceManager.GetString("WarningIgnoreBodyDuringPlayback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring BodyIndex stream, it will be regenerated during playback..
        /// </summary>
        public static string WarningIgnoreBodyIndexDuringPlayback {
            get {
                return ResourceManager.GetString("WarningIgnoreBodyIndexDuringPlayback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: An invalid path was provided. The following clip will be created in the default repository: {0}.
        /// </summary>
        public static string WarningInvalidRecodingPath {
            get {
                return ResourceManager.GetString("WarningInvalidRecodingPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KSUtil is a sample tool built with the KStudio Managed API.
        ///
        ///Select &apos;View File&apos; to view the contents of an event file (.xef or .xrf).
        ///Select &apos;Compare Files&apos; for a side-by-side comparison of two event files.
        ///
        ///Additional functionality is offered via command line:
        ///  -view &lt;filePath&gt;
        ///     Display the contents of an event file (.xef or .xrf).
        ///  -compare &lt;filePath1&gt; &lt;filePath2&gt;
        ///     Compare metadata and stream content across two event files.
        ///  -update &lt;filePath&gt; &lt;metadataKey&gt; &lt;metadataValue&gt;
        ///     Add/e [rest of string was truncated]&quot;;.
        /// </summary>
        public static string WelcomeDescription {
            get {
                return ResourceManager.GetString("WelcomeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to KSUtil.
        /// </summary>
        public static string WelcomeHeader {
            get {
                return ResourceManager.GetString("WelcomeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .xef.
        /// </summary>
        public static string XefExtension {
            get {
                return ResourceManager.GetString("XefExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .xrf.
        /// </summary>
        public static string XrfExtension {
            get {
                return ResourceManager.GetString("XrfExtension", resourceCulture);
            }
        }
    }
}
